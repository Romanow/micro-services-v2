name: Build project
on: [ push ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "17"
          cache: "gradle"

      - name: Build project
        uses: eskatos/gradle-command-action@v2
        with:
          dependencies-cache-enabled: true
          arguments: clean build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: '*-service/build/libs/*.jar'
          retention-days: 1

      - name: Test Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

  test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: .

      - name: Build images
        timeout-minutes: 5
        run: docker compose build

      - name: Run containers
        id: run-containers
        timeout-minutes: 10
        run: |
          docker compose up -d --wait

      - name: Print logs
        if: failure() && steps.run-containers.outcome != 'success'
        run: |
          docker compose logs

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: tests/postman/collection.json
          environment: tests/postman/local-environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v

  publish:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - uses: actions/download-artifact@v3
        with:
          name: jar
          path: .

      - name: Build images
        timeout-minutes: 5
        run: docker compose build

      - name: Push images
        run: docker compose push
