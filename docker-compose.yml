version: "3"
services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/postgres/:/docker-entrypoint-initdb.d/

  store-service:
    build: ./store-service
    image: ${REPOSITORY_NAME}/store-service:v3.0
    container_name: store
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:8480/manage/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8480:8480"
    depends_on:
      postgres:
        condition: service_healthy

  order-service:
    build: ./order-service
    image: ${REPOSITORY_NAME}/order-service:v3.0
    container_name: orders
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:8380/manage/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8380:8380"
    depends_on:
      postgres:
        condition: service_healthy

  warehouse-service:
    build: ./warehouse-service
    image: ${REPOSITORY_NAME}/warehouse-service:v3.0
    container_name: warehouse
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:8280/manage/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8280:8280"
    depends_on:
      postgres:
        condition: service_healthy

  warranty-service:
    build: ./warranty-service
    image: ${REPOSITORY_NAME}/warranty-service:v3.0
    container_name: warranty
    environment:
      SPRING_PROFILES_ACTIVE: docker
    healthcheck:
      test: [ "CMD", "curl", "--silent", "--fail", "http://localhost:8180/manage/health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8180:8180"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  db-data:
