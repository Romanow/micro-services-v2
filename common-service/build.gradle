plugins {
    id "org.jetbrains.kotlin.kapt"
    id "org.jetbrains.kotlin.plugin.spring"
    id "com.adarshr.test-logger"
}

dependencies {
    api project(":common-api")

    api "com.fasterxml.jackson.module:jackson-module-kotlin"

    api "org.springframework.boot:spring-boot-starter-web"
    api "org.springframework.boot:spring-boot-starter-data-jpa"
    api "org.springframework.boot:spring-boot-starter-actuator"
    api "org.springframework.boot:spring-boot-starter-security"
    api "org.springframework.boot:spring-boot-starter-validation"
    api "org.springframework.boot:spring-boot-starter-logging"
    api "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j"
    api "org.springframework.security:spring-security-oauth2-resource-server"
    api "org.springframework.security:spring-security-oauth2-jose"
    api "org.springframework:spring-webflux"

    api "net.logstash.logback:logstash-logback-encoder:$logstashEncoderVersion"
    api "io.micrometer:micrometer-tracing-bridge-otel"
    api "io.opentelemetry:opentelemetry-exporter-otlp"
    api "io.projectreactor.netty:reactor-netty-http"
    api "io.micrometer:micrometer-registry-prometheus"

    api "com.auth0:java-jwt:$jwtVersion"

    api "org.postgresql:postgresql"
    api "org.flywaydb:flyway-database-postgresql"
    api "io.github.resilience4j:resilience4j-micrometer"
    api "org.zalando:logbook-core:$logbookVersion"

    api "org.springdoc:springdoc-openapi-starter-common:$openApiVersion"
    api "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openApiVersion"

    kapt "org.springframework.boot:spring-boot-configuration-processor"
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

testlogger {
    theme "mocha"
}
