apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      name: tcp
      targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  10-create-user-and-db.sql: |
    CREATE DATABASE services;
    CREATE ROLE program WITH PASSWORD 'test';
    GRANT ALL PRIVILEGES ON DATABASE services TO program;
    ALTER ROLE program WITH LOGIN;
  20-create-schemas.sh: |
    #!/bin/bash
    set -e
    export PGPASSWORD=test
    psql -U program -d services <<-EOSQL
    CREATE SCHEMA IF NOT EXISTS store;
    CREATE SCHEMA IF NOT EXISTS orders;
    CREATE SCHEMA IF NOT EXISTS warehouse;
    CREATE SCHEMA IF NOT EXISTS warranty;
    EOSQL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:12
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: postgres
          ports:
            - name: postgres
              containerPort: 5432
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-config-map
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: db-data
        - name: postgres-config-map
          configMap:
            name: postgres-config