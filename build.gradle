plugins {
    id "idea"
    id "java-library"
    id "org.jetbrains.kotlin.jvm" version "1.9.25"
    id "org.jetbrains.kotlin.kapt" version "1.9.22" apply false
    id "org.jetbrains.kotlin.plugin.jpa" version "1.9.22" apply false
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.22" apply false
    id "org.jlleitschuh.gradle.ktlint" version "12.1.1" apply false
    id "org.springframework.boot" version "3.2.8" apply false
    id "com.gorylenko.gradle-git-properties" version "2.4.1" apply false
    id "com.adarshr.test-logger" version "4.0.0" apply false
    id "io.spring.dependency-management" version "1.1.3"
}

ext {
    kotlinVersion = "1.9.22"
    springBootVersion = "3.2.8"
    springCircuitBreakerVersion = "3.1.1"
    validationApiVersion = "2.0.1.Final"
    gsonVersion = "2.8.5"
    jwtVersion = "4.4.0"
    openApiVersion = "2.1.0"
    logbookVersion = "2.16.0"
    logstashEncoderVersion = "7.3"
    postgresContainerVersion = "1.19.0"
}

subprojects { ->
    apply plugin: "idea"
    apply plugin: "kotlin"
    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: "io.spring.dependency-management"

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    [compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

    repositories {
        mavenCentral()
    }

    ktlint {
        version.set("1.1.1")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
            mavenBom "org.springframework.cloud:spring-cloud-circuitbreaker-dependencies:$springCircuitBreakerVersion"
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

        implementation "javax.validation:validation-api:$validationApiVersion"
        implementation "org.apache.commons:commons-lang3"
        implementation "com.google.code.gson:gson"
    }

    processResources {
        filesMatching(["**/properties-from-gradle.properties"]) {
            expand(project.properties)
        }
    }
}
